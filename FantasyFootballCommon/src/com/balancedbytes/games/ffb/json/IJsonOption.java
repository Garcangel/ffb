package com.balancedbytes.games.ffb.json;

import com.balancedbytes.games.ffb.CardFactory;
import com.balancedbytes.games.ffb.CardTypeFactory;
import com.balancedbytes.games.ffb.ClientModeFactory;
import com.balancedbytes.games.ffb.ClientStateIdFactory;
import com.balancedbytes.games.ffb.ConcedeGameStatusFactory;
import com.balancedbytes.games.ffb.DirectionFactory;
import com.balancedbytes.games.ffb.GameOptionFactory;
import com.balancedbytes.games.ffb.InducementTypeFactory;
import com.balancedbytes.games.ffb.KickoffResultFactory;
import com.balancedbytes.games.ffb.PlayerActionFactory;
import com.balancedbytes.games.ffb.PlayerChoiceModeFactory;
import com.balancedbytes.games.ffb.ReRollSourceFactory;
import com.balancedbytes.games.ffb.ReRolledActionFactory;
import com.balancedbytes.games.ffb.SendToBoxReasonFactory;
import com.balancedbytes.games.ffb.SeriousInjuryFactory;
import com.balancedbytes.games.ffb.SkillFactory;
import com.balancedbytes.games.ffb.SoundFactory;
import com.balancedbytes.games.ffb.SpecialEffectFactory;
import com.balancedbytes.games.ffb.TeamStatusFactory;
import com.balancedbytes.games.ffb.dialog.DialogIdFactory;
import com.balancedbytes.games.ffb.model.AnimationTypeFactory;
import com.balancedbytes.games.ffb.net.NetCommandIdFactory;
import com.balancedbytes.games.ffb.net.ServerStatusFactory;

/**
 * 
 * @author Kalimar
 */
public interface IJsonOption {

                JsonStringOption ACTING_PLAYER_ID = new JsonStringOption("actingPlayerId");
          JsonEnumWithNameOption ANIMATION_TYPE = new JsonEnumWithNameOption("animationType", new AnimationTypeFactory());
               JsonBooleanOption APOTHECARY_USED = new JsonBooleanOption("apothecaryUsed");
                   JsonIntOption AVAILABLE_CARDS = new JsonIntOption("availableCards");
                   JsonIntOption AVAILABLE_GOLD = new JsonIntOption("availableGold");
                JsonStringOption AWAY_TEXT = new JsonStringOption("awayText");
       JsonFieldCoordinateOption BALL_COORDINATE = new JsonFieldCoordinateOption("ballCoordinate");         
       JsonFieldCoordinateOption BALL_COORDINATE_WITH_KICK = new JsonFieldCoordinateOption("ballCoordinateWithKick");         
              JsonIntArrayOption BLOCK_ROLL = new JsonIntArrayOption("blockRoll");
                   JsonIntOption BLOCKS = new JsonIntOption("blocks"); 
                   JsonIntOption BLOODWEISER_BABES = new JsonIntOption("bloodweiserBabes");
       JsonFieldCoordinateOption BOTTOM_RIGHT = new JsonFieldCoordinateOption("bottomRight");
          JsonEnumWithNameOption CARD = new JsonEnumWithNameOption("card", new CardFactory());
           JsonStringArrayOption CARDS = new JsonStringArrayOption("cards");
           JsonStringArrayOption CARDS_ACTIVE = new JsonStringArrayOption("cardsActive");
           JsonStringArrayOption CARDS_AVAILABLE = new JsonStringArrayOption("cardsAvailable");
           JsonStringArrayOption CARDS_DEACTIVATED = new JsonStringArrayOption("cardsDeactivated");
          JsonEnumWithNameOption CARD_TYPE = new JsonEnumWithNameOption("cardType", new CardTypeFactory());
                   JsonIntOption CASUALTIES = new JsonIntOption("casualties");
                JsonStringOption CATCHER_ID = new JsonStringOption("catcherId");
                JsonStringOption CHALLENGE = new JsonStringOption("challenge");
               JsonBooleanOption CHOICE_FOLLOWUP = new JsonBooleanOption("choiceFollowup");
               JsonBooleanOption CHOICE_HEADS = new JsonBooleanOption("choiceHeads");
               JsonBooleanOption CHOICE_RECEIVE = new JsonBooleanOption("choiceReceive");
                JsonStringOption CHOOSING_TEAM_ID = new JsonStringOption("choosingTeamId");
          JsonEnumWithNameOption CLIENT_MODE = new JsonEnumWithNameOption("clientMode", new ClientModeFactory());
          JsonEnumWithNameOption CLIENT_STATE_ID = new JsonEnumWithNameOption("clientStateId", new ClientStateIdFactory());
                JsonStringOption COACH = new JsonStringOption("coach");
          JsonEnumWithNameOption CONCEDE_GAME_STATUS = new JsonEnumWithNameOption("concedeGameStatus", new ConcedeGameStatusFactory());
                   JsonIntOption COMMAND_NR = new JsonIntOption("commandNr");
                   JsonIntOption COMPLETIONS = new JsonIntOption("completions");
       JsonFieldCoordinateOption COORDINATE = new JsonFieldCoordinateOption("coordinate");
       JsonFieldCoordinateOption COORDINATE_FROM = new JsonFieldCoordinateOption("coordinateFrom");
  JsonFieldCoordinateArrayOption COORDINATES_TO = new JsonFieldCoordinateArrayOption("coordinatesTo");
                   JsonIntOption CURRENT_SPPS = new JsonIntOption("currentSpps");
               JsonBooleanOption DEFECTING = new JsonBooleanOption("defecting");
                JsonStringOption DEFENDER_ID = new JsonStringOption("defenderId");
           JsonStringArrayOption DESCRIPTIONS = new JsonStringArrayOption("descriptions");
          JsonEnumWithNameOption DIALOG_ID = new JsonEnumWithNameOption("dialogId", new DialogIdFactory());
                   JsonIntOption DICE_INDEX = new JsonIntOption("diceIndex");
          JsonEnumWithNameOption DIRECTION = new JsonEnumWithNameOption("direction", new DirectionFactory());
                JsonStringOption DIVISION = new JsonStringOption("division");
       JsonFieldCoordinateOption END_COORDINATE = new JsonFieldCoordinateOption("endCoordinate");
                   JsonIntOption ENTROPY = new JsonIntOption("entropy");
               JsonBooleanOption EXHAUSTED = new JsonBooleanOption("exhausted");
                   JsonIntOption FOULS = new JsonIntOption("fouls");
               JsonBooleanOption FUMBLE = new JsonBooleanOption("fumble");
                  JsonLongOption GAME_ID = new JsonLongOption("gameId");
                 JsonArrayOption GAME_LIST = new JsonArrayOption("gameList");
                JsonStringOption GAME_NAME = new JsonStringOption("gameName");
          JsonEnumWithNameOption GAME_OPTION = new JsonEnumWithNameOption("gameOption", new GameOptionFactory());
                 JsonArrayOption GAME_OPTIONS = new JsonArrayOption("gameOptions");
               JsonBooleanOption HAS_ENTROPY = new JsonBooleanOption("hasEntropy");
               JsonBooleanOption HAS_USED_SECRET_WEAPON = new JsonBooleanOption("hasUsedSecretWeapon");
               JsonBooleanOption HOME_CHOICE = new JsonBooleanOption("homeChoice");
                JsonStringOption HOME_TEXT = new JsonStringOption("homeText");
                JsonObjectOption INDUCEMENT_SET = new JsonObjectOption("inducementSet");
          JsonEnumWithNameOption INDUCEMENT_TYPE = new JsonEnumWithNameOption("inducementType", new InducementTypeFactory());
           JsonStringArrayOption INDUCEMENT_TYPES = new JsonStringArrayOption("inducementTypes");
                 JsonArrayOption INDUCEMENTS = new JsonArrayOption("inducements");
           JsonPlayerStateOption INJURY = new JsonPlayerStateOption("injury");
                   JsonIntOption INTERCEPTIONS = new JsonIntOption("interceptions");
       JsonFieldCoordinateOption INTERCEPTOR_COORDINATE = new JsonFieldCoordinateOption("interceptorCoordinate");
                JsonStringOption INTERCEPTOR_ID = new JsonStringOption("interceptorId");
          JsonEnumWithNameOption KICKOFF_RESULT = new JsonEnumWithNameOption("kickoffResult", new KickoffResultFactory());
               JsonBooleanOption LEAPING = new JsonBooleanOption("leaping");
               JsonBooleanOption LOAD_DIALOG = new JsonBooleanOption("loadDialog");
               JsonBooleanOption LOCKED = new JsonBooleanOption("locked");
                   JsonIntOption MAX_NR_OF_BRIBES = new JsonIntOption("maxNrOfBribes");
                   JsonIntOption MAX_SELECTS = new JsonIntOption("maxSelects");
           JsonStringArrayOption MERCENARY_POSTION_IDS = new JsonStringArrayOption("mercenaryPositionIds");
           JsonStringArrayOption MERCENARY_SKILLS = new JsonStringArrayOption("mercenarySkills");
                JsonStringOption MESSAGE = new JsonStringOption("message");
           JsonStringArrayOption MESSAGES = new JsonStringArrayOption("messages");
                   JsonIntOption MINIMUM_ROLL = new JsonIntOption("minimumRoll");
                   JsonIntOption MINIMUM_ROLL_DODGE = new JsonIntOption("minimumRollDodge");
                   JsonIntOption MINIMUM_ROLL_GFI = new JsonIntOption("minimumRollGfi");
                JsonStringOption NAME = new JsonStringOption("name");
          JsonEnumWithNameOption NET_COMMAND_ID = new JsonEnumWithNameOption("netCommandId", new NetCommandIdFactory());
                 JsonArrayOption NR_OF_CARDS_PER_TYPE = new JsonArrayOption("nrOfCardsPerType");
                   JsonIntOption NR_OF_CARDS = new JsonIntOption("nrOfCards");
                   JsonIntOption NR_OF_DICE = new JsonIntOption("nrOfDice");
                   JsonIntOption NR_OF_SLOTS = new JsonIntOption("nrOfSlots");
                   JsonIntOption NUMBER = new JsonIntOption("number");
                   JsonIntOption OLD_ROLL = new JsonIntOption("oldRoll");
                   JsonIntOption OPPONENT_TEAM_VALUE = new JsonIntOption("opponentTeamValue");
                JsonStringOption PASSWORD = new JsonStringOption("password");
                   JsonIntOption PASSING = new JsonIntOption("passing");
                   JsonIntOption PETTY_CASH = new JsonIntOption("pettyCash");
          JsonEnumWithNameOption PLAYER_ACTION = new JsonEnumWithNameOption("playerAction", new PlayerActionFactory());
                   JsonIntOption PLAYER_AWARDS = new JsonIntOption("playerAwards");
          JsonEnumWithNameOption PLAYER_CHOICE_MODE = new JsonEnumWithNameOption("playerChoiceMode", new PlayerChoiceModeFactory());
  JsonFieldCoordinateArrayOption PLAYER_COORDINATES = new JsonFieldCoordinateArrayOption("playerCoordinates");
                JsonStringOption PLAYER_ID = new JsonStringOption("playerId");
           JsonStringArrayOption PLAYER_IDS = new JsonStringArrayOption("playerIds");
           JsonStringArrayOption PLAYER_NAMES = new JsonStringArrayOption("playerNames");
                   JsonIntOption PLAYER_NR = new JsonIntOption("playerNr");
              JsonIntArrayOption PLAYER_NUMBERS = new JsonIntArrayOption("playerNumbers");
                 JsonArrayOption PLAYER_POSITIONS = new JsonArrayOption("playerPositions");
           JsonPlayerStateOption PLAYER_STATE = new JsonPlayerStateOption("playerState");
           JsonPlayerStateOption PLAYER_STATE_NEW = new JsonPlayerStateOption("playerStateNew");
           JsonPlayerStateOption PLAYER_STATE_OLD = new JsonPlayerStateOption("playerStateOld");
           JsonStringArrayOption POSITION_IDS = new JsonStringArrayOption("positionIds"); 
               JsonBooleanOption PRO_RE_ROLL_OPTION = new JsonBooleanOption("proReRollOption");
                JsonObjectOption PUSHBACK = new JsonObjectOption("pushback");
                JsonStringOption RACE = new JsonStringOption("race");
               JsonBooleanOption RECOVERING = new JsonBooleanOption("recovering");
                   JsonIntOption REPLAY_TO_COMMAND_NR = new JsonIntOption("replayToCommandNr");
          JsonEnumWithNameOption RE_ROLLED_ACTION = new JsonEnumWithNameOption("reRolledAction", new ReRolledActionFactory());
               JsonBooleanOption RE_ROLL_INJURY = new JsonBooleanOption("reRollInjury");
          JsonEnumWithNameOption RE_ROLL_SOURCE = new JsonEnumWithNameOption("reRollSource", new ReRollSourceFactory());
                   JsonIntOption ROLL = new JsonIntOption("roll");
                   JsonIntOption RUSHING = new JsonIntOption("rushing");
               JsonBooleanOption SELECTED = new JsonBooleanOption("selected");
                JsonStringOption SEND_TO_BOX_BY_PLAYER_ID = new JsonStringOption("sendToBoxByPlayerId");
                   JsonIntOption SEND_TO_BOX_HALF = new JsonIntOption("sendToBoxHalf");
          JsonEnumWithNameOption SEND_TO_BOX_REASON = new JsonEnumWithNameOption("sendToBoxReason", new SendToBoxReasonFactory());
                   JsonIntOption SEND_TO_BOX_TURN = new JsonIntOption("sendToBoxTurn");
          JsonEnumWithNameOption SERIOUS_INJURY = new JsonEnumWithNameOption("seriousInjury", new SeriousInjuryFactory());
          JsonEnumWithNameOption SERIOUS_INJURY_DECAY = new JsonEnumWithNameOption("seriousInjuryDecay", new SeriousInjuryFactory());
          JsonEnumWithNameOption SERIOUS_INJURY_NEW = new JsonEnumWithNameOption("seriousInjuryNew", new SeriousInjuryFactory());
          JsonEnumWithNameOption SERIOUS_INJURY_OLD = new JsonEnumWithNameOption("seriousInjuryOld", new SeriousInjuryFactory());
          JsonEnumWithNameOption SERVER_STATUS = new JsonEnumWithNameOption("serverStatus", new ServerStatusFactory());
           JsonStringArrayOption SETTING_NAMES = new JsonStringArrayOption("settingNames");
           JsonStringArrayOption SETTING_VALUES = new JsonStringArrayOption("settingValues");
           JsonStringArrayOption SETUP_ERRORS = new JsonStringArrayOption("setupErrors");
                JsonStringOption SETUP_NAME = new JsonStringOption("setupName");
           JsonStringArrayOption SETUP_NAMES = new JsonStringArrayOption("setupNames");
          JsonEnumWithNameOption SKILL = new JsonEnumWithNameOption("skill", new SkillFactory());
               JsonBooleanOption SKILL_USED = new JsonBooleanOption("skillUsed");
              JsonIntArrayOption SLOTS = new JsonIntArrayOption("slots");
          JsonEnumWithNameOption SOUND = new JsonEnumWithNameOption("sound", new SoundFactory());
                   JsonIntOption SPECTATORS = new JsonIntOption("spectators");
           JsonStringArrayOption STAR_PLAYER_POSTION_IDS = new JsonStringArrayOption("starPlayerPositionIds");
       JsonFieldCoordinateOption START_COORDINATE = new JsonFieldCoordinateOption("startCoordinate");
                  JsonDateOption STARTED = new JsonDateOption("started");
                JsonStringOption TALK = new JsonStringOption("talk");
           JsonStringArrayOption TALKS = new JsonStringArrayOption("talks");
       JsonFieldCoordinateOption TARGET_COORDINATE = new JsonFieldCoordinateOption("targetCoordinate");
                JsonStringOption TEAM_AWAY_COACH = new JsonStringOption("teamAwayCoach");
                JsonStringOption TEAM_AWAY_ID = new JsonStringOption("teamAwayId");
                JsonStringOption TEAM_AWAY_NAME = new JsonStringOption("teamAwayName");
                JsonStringOption TEAM_HOME_COACH = new JsonStringOption("teamHomeCoach");
                JsonStringOption TEAM_HOME_ID = new JsonStringOption("teamHomeId");
                JsonStringOption TEAM_HOME_NAME = new JsonStringOption("teamHomeName");
                JsonStringOption TEAM_ID = new JsonStringOption("teamId");
                 JsonArrayOption TEAM_LIST = new JsonArrayOption("teamList");
                JsonStringOption TEAM_NAME = new JsonStringOption("teamName");
               JsonBooleanOption TEAM_RE_ROLL_OPTION = new JsonBooleanOption("teamReRollOption"); 
          JsonEnumWithNameOption TEAM_STATUS = new JsonEnumWithNameOption("teamStatus", new TeamStatusFactory());
                   JsonIntOption TEAM_VALUE = new JsonIntOption("teamValue");
                JsonStringOption TEXT = new JsonStringOption("text");
                JsonStringOption THROWER_ID = new JsonStringOption("throwerId");
                JsonStringOption THROWN_PLAYER_ID = new JsonStringOption("thrownPlayerId");
               JsonBooleanOption THROW_TEAM_MATE = new JsonBooleanOption("throwTeamMate");
                  JsonLongOption TIMESTAMP = new JsonLongOption("timestamp");
       JsonFieldCoordinateOption TOP_LEFT = new JsonFieldCoordinateOption("topLeft");
                   JsonIntOption TOUCHDOWNS = new JsonIntOption("touchdowns");
                   JsonIntOption TREASURY = new JsonIntOption("treasury");
                   JsonIntOption TURNS_PLAYED = new JsonIntOption("turnsPlayed");
                   JsonIntOption USES = new JsonIntOption("uses");
               JsonBooleanOption USING_STAB = new JsonBooleanOption("usingStab");
                   JsonIntOption VALUE = new JsonIntOption("value");
                JsonStringOption VICTIM_ID = new JsonStringOption("victimId");
               JsonBooleanOption WITH_BALL = new JsonBooleanOption("withBall");
          JsonEnumWithNameOption WIZARD_SPELL = new JsonEnumWithNameOption("wizardSpell", new SpecialEffectFactory());
          
}
